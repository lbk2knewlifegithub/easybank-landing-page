@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

@layer base {
  :root {
    // colors
    --dark-blue: 233, 26%, 24%;
    --lime-green: 136, 65%, 51%;
    --bright-cyan: 192, 70%, 51%;
    --grayish-blue: 233, 8%, 62%;
    --light-grayish-blue: 220, 16%, 96%;
    --very-light-gray: 0, 0%, 98%;
    --white: 0, 0%, 100%;

    // text colors
    --text-fill: var(--dark-blue);
    --text-primary: var(--lime-green);
    --text-muted: var(--grayish-blue);
    --text-inverted: var(--light-grayish-blue);

    // background colors
    --bg-fill: var(--white);
    --bg-footer: var(--dark-blue);

    // border colors
    --border-primary: var(--lime-green);
  }
}

@layer components {
  //CUSTOM APPLY HERE
  .btn {
    @apply inline-block duration-300 rounded-full px-6 py-3 tracking-wide  font-semibold text-sm lg:py-3 lg:font-bold lg:text-base lg:px-8;
  }

  .btn-primary {
    @apply text-white bg-gradient-to-r from-lime-green to-bright-cyan hover:opacity-70;
  }

  .background {
    @apply absolute inset-0 w-full h-full object-cover object-center z-[-];
  }

  .container-large {
    max-width: 1440px;
    margin: 0 auto;
  }

  .animate-link {
    position: relative;
    padding-bottom: 0.2rem;

    &:hover {
      &:before,
      &:after {
        width: 50%;
      }
    }

    &:before,
    &:after {
      content: "";
      position: absolute;
      left: 50%;
      bottom: 0;
      height: 4px;
      transition: width 0.2s ease-in-out;
      background: hsl(var(--lime-green));
      width: 0;
    }

    &:after {
      transform-origin: left;
      transform: rotate(-180deg);
    }
  }
}

// Breakpoints
@media (min-width: 64em) {
  // styles go here
}

// 640px, 1024px, 1400px
$breakpoints-up: (
  "medium": "40em",
  "large": "64em",
  "xlarge": "87.5em",
);

// 639px, 1023px, 1399px
$breakpoints-down: (
  "small": "39.9375em",
  "medium": "63.9375em",
  "large": "87.4375em",
);

@mixin breakpoint-up($size) {
  @media (min-width: map-get($breakpoints-up, $size)) {
    @content;
  }
}

@mixin breakpoint-down($size) {
  @media (max-width: map-get($breakpoints-down, $size)) {
    @content;
  }
}
